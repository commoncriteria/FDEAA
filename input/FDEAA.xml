<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="..\transforms\pp2html.xsl"?>

<!-- for a PP or Functional Package -->
<?xml-model href="https://raw.githubusercontent.com/commoncriteria/transforms/master/schemas/CCProtectionProfile.rng" 
	type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>

<!-- for a PP-module -->
<!-- <?xml-model href="../transforms/schemas/CCModule.rng" type="application/xml" 
                  schematypens="http://relaxng.org/ns/structure/1.0"?>
-->

<!-- For PP or cPP -->
<!-- Name of the TOE product  -->
<!-- Plural name of the TOE product (optional)  -->
<!-- Whether to use boilerplate text by default (can be disabled in sections) -->
<!-- A short name for the PP (e.g. App or MDF) -->
<PP xmlns="https://niap-ccevs.org/cc/v1"
    xmlns:h="http://www.w3.org/1999/xhtml"
    xmlns:sec="https://niap-ccevs.org/cc/v1/section"
    target-product="Widget" 
    target-products="Widgets" 
    boilerplate="yes"
    short="Wid"
>
<cPP/>
<!--    <cPP/>    -->                                 <!-- This empty element must be included here if this is a cPP. It must not be here if it is not.  -->

<!-- for FP -->
<!--
<Package name="TLS"                                   
    xmlns="https://niap-ccevs.org/cc/v1"
    xmlns:h="http://www.w3.org/1999/xhtml"
    xmlns:sec="https://niap-ccevs.org/cc/v1/section"
-->

<!-- For a PP-Module 
<Module
    name="Widget Clients"                              # Name of the Module  
    xmlns="https://niap-ccevs.org/cc/v1"               # Some html magic
    xmlns:h="http://www.w3.org/1999/xhtml"             # uses the "h" namespace for inline HTML
    xmlns:sec="https://niap-ccevs.org/cc/v1/section"   # The "sec" namespace for sections is available
    target-product="Widget"                            # Name of the TOE product
    target-products="Widgets"                          # Plural name of the TOE product (optional)
    boilerplate="yes"                                  # Whether to use boilerplate text by default (can be disabled in sections)
    short="Wid">                                       # A short name for the PP (e.g. App or MDF)
-->

  <!-- PPReference (all documents) -->
  <PPReference>
    <ReferenceTable>
      <PPTitle>collaborative Protection Profile for Full Drive Encryption – Encryption Engine</PPTitle>
      <PPVersion>2.0</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2025-04-11</PPPubDate>
      <Keywords>Full Drive Encryption – Encryption Engine</Keywords>               <!-- This field is unused and optional -->
    </ReferenceTable>
  </PPReference>

<!-- Revision History (all documents) -->
  <RevisionHistory>
    <entry>
      <version>Round 1</version>
      <date>2015-04-23</date>
      <subject>First draft of version 1.0 for comment</subject>
    </entry>
    <entry>
      <version>1.0</version>
      <date>2015-08-14</date>
      <subject>Release - first version released</subject>
    </entry>
    <entry>
      <version>2.0</version>
      <date>2024-03-28</date>
      <subject>Updated for CC:2022, or whatever</subject>
    </entry>
    <entry>
        <version>2.0</version>
        <date>2025-04-11</date>
        <subject>Updated for CC:2022, reviewing and applying modifications to the PP</subject>
      </entry>
  </RevisionHistory>



<!-- PP Preferences (all documents) -->
<pp-preferences>
     <!-- Indicate that audit events are defined with their SFRs -->
	 <!-- All new documents should do it this way. This will become the default, if it hasn't already.  -->
	 <!-- And this preference might not even be necessary. I should test it. -->
     <audit-events-in-sfrs/>         
	 
	 <!-- Indicates that audit events will be displayed along the associated SFR in the published document -->
	 <!-- rather than in an audit table. -->
<!--     <display-audit-with-sfrs/>     -->

	 <!-- Indicates that the document is using CC:2022. -->
	 <!-- This setting has already been deprecated, but is still allowed for backward compatiblity -->
	 <!-- New douments shoudl use the <CClaimsInfo> element to specify CC:2022 --> 
 
  </pp-preferences>


  <!-- Introduction (all documents) -->
  <section title="Introduction" id="sec-intro">

    <!-- PP or TOE Overview -->

    <section title="PP Overview" id="sec-ppoverview">
        <h:p>
		The purpose of the first set of Collaborative Protection Profiles (cPPs) for Full Drive Encryption (FDE): Authorization Acquisition (AA) and Encryption Engine (EE) is to provide requirements for Data-at-Rest protection for a lost device that contains storage. These cPPs allow FDE solutions based in software and/or hardware to meet the requirements. The form factor for a storage device may vary, but could include: system hard drives/solid state drives in servers, workstations, laptops, mobile devices, tablets, and external media. A hardware solution could be a Self-Encrypting Drive or other hardware-based solutions; the interface (USB, SATA, etc.) used to connect the storage device to the host machine is outside the scope of this cPP.
        </h:p><h:p>
        Full Drive Encryption encrypts all data (with certain exceptions) on the storage device and permits access to the data only after successful authorization to the FDE solution. The exceptions include the necessity to leave a portion of the storage device (the size may vary based on implementation) unencrypted for such things as the Master Boot Record (MBR) or other AA/EE pre-authentication software. These FDE cPPs interpret the term “full drive encryption” to allow FDE solutions to leave a portion of the storage device unencrypted so long as it contains plaintext user or plaintext authorization data.
        </h:p><h:p>
        Since the FDE cPPs support a variety of solutions, two cPPs describe the requirements for the FDE components shown in Figure 1.  
        </h:p>
        
        <h:p><figure entity="images/fde-components.png" title="FDE Components" id="toe"/></h:p>

        <h:p>The FDE cPP - Authorization Acquisition describes the requirements for the Authorization Acquisition piece and details the security requirements and assurance activities necessary to interact with a user and result in the availability of sending a Border Encryption Value (BEV)to the Encryption Engine.</h:p>
        <h:p>The FDE cPP - Encryption Engine describes the requirements for the Encryption Engine piece and details the necessary security requirements and assurance activities for the actual encryption/decryption of the data by the DEK. Each cPP will also have a set of core requirements for management functions, proper handling of cryptographic keys, updates performed in a trusted manner, audit and self-tests. </h:p>
        <h:p>This TOE description defines the scope and functionality of the Authorization Acquisition, and
            the Security Problem Definition describes the assumptions made about the operating
            environment and the threats to the AA that the cPP requirements address</h:p>
	</section>  <!-- PP Overview -->
	
	<!-- CC and Tech terms.  -->
	<!-- CC terms are auto-generated -->
	<!-- All tech terms are generated from the list below. -->
	<!-- You should add and delete tech terms as required by the technology type. -->
	<tech-terms>
	  <!-- To remove an irrlevant CC term from the document, use the <suppress> element -->
      <suppress>Distributed TOE</suppress>   
      <term abbr='AA' full="Authorization Acquisition"></term>
      <term full="Address Space Layout Randomization" abbr="ASLR">
		An anti-exploitation feature which loads memory mappings into unpredictable
		locations. ASLR makes it more difficult for an attacker to redirect control to code
		that they have introduced into the address space of a process.
      </term>
      <term abbr='BEV' full="Border Encryption Valu"></term>
      <term abbr='BIOS' full="Basic Input Output System"></term>
      <term abbr='CBC' full="Cipher Block Chaining"></term>
      <term abbr='CC' full="Common Criteria"></term>
      <term abbr='CCM' full="Counter with CBC-Message Authentication Code"></term>
      <term abbr='CEM' full="Common Evaluation Methodology"></term>
      <term abbr='CPP' full="Collaborative Protection Profile"></term>
      <term abbr='DEK' full="Data Encryption Key"></term>
      <term abbr='DRBG' full="Deterministic Random Bit Generator"></term>
      <term abbr='DSS' full="Digital Signature Standard"></term>
      <term abbr='ECC' full="Elliptic Curve Cryptography"></term>
      <term abbr='ECDSA' full="Elliptic Curve Digital Signature Algorithm"></term>
      <term abbr='EE' full="Encryption Engine"></term>
      <term abbr='EEPROM' full="Electrically Erasable Programmable Read-Only Memory"></term>
      <term abbr='FIPS' full="Federal Information Processing Standards"></term>
      <term abbr='FDE' full="Full Drive Encryption"></term>
      <term abbr='FFC' full="Finite Field Cryptography"></term>
      <term abbr='GCM' full="Galois Counter Mode"></term>
      <term abbr='HMAC' full="Keyed-Hash Message Authentication Code"></term>
      <term abbr='HW' full="Hardware"></term>
      <term abbr='IEEE' full="Institute of Electrical and Electronics Engineers"></term>
      <term abbr='IT' full="Information Technology"></term>
      <term abbr='ITSEF' full="IT Security Evaluation Facility"></term>
      <term abbr='ISO/IEC' full="International Organization for Standardization / International Electrotechnical Commission"></term>
      <term abbr='IV' full="Initialization Vector"></term>
      <term abbr='KEK' full="Key Encryption Key"></term>
      <term abbr='KMD' full="Key Management Description"></term>
      <term abbr='KRK' full="Key Release Key"></term>
      <term abbr='MBR' full="Master Boot Record"></term>
      <term abbr='NIST' full="National Institute of Standards and Technology"></term>
      <term abbr='' full=""></term>
      
      <term abbr='AES' full="Advanced Encryption Standard"/>
      <term abbr='API' full="Application Programming Interface"/>
      
      <term full="Administrator">
		An administrator is responsible for management activities, including setting policies that are 
		applied by the enterprise on the operating system.
		This administrator could be acting remotely through a management server, from which the system
		receives configuration policies.
		An administrator can enforce settings on the system which cannot be overridden by non-administrator users.
      </term>
      <term full="Application" abbr="app">
		Software that runs on a platform and performs tasks on behalf of the user
		or owner of the platform, as well as its supporting documentation. 
      </term>
      <term full="Application Programming Interface" abbr="API">
		A specification of routines, data structures, object classes, and variables
		that allows an application to make use of services provided by another software
		component, such as a library. APIs are often provided for a set of libraries included
		with the platform.
      </term>
      <term abbr='CESG' full="Communications-Electronics Security Group"/>
      <term abbr='CMC' full="Certificate Management over CMS"/>
      <term abbr='CMS' full="Cryptographic Message Syntax"/>
      <term abbr='CN' full="Common Names"/>
      <term full="Credential">
		Data that establishes the identity of a user, e.g. a cryptographic key or
		password.
      </term>
      <term abbr='CRL' full="Certificate Revocation List"/>
      <term abbr='CSA' full="Computer Security Act"/>
      <term full="Critical Security Parameters" abbr="CSP">
		Information that is either user or system defined and
		is used to operate a cryptographic module in processing encryption functions including
		cryptographic keys and authentication data, such as passwords, the disclosure or modification
		of which can compromise the security of a cryptographic module or the security of the
		information protected by the module.
      </term>
      <term full="Data At Rest" abbr="DAR" />
      <term full="DAR Protection">
		Countermeasures that prevent attackers, even those with physical access,
		from extracting data from non-volatile storage.
		Common techniques include data encryption and wiping.
      </term>
      <term full="Data Execution Prevention" abbr="DEP">
		An anti-exploitation feature of modern operating systems executing on
		modern computer hardware, which enforces a non-execute permission on pages of memory.
		DEP prevents pages of memory from containing both data and instructions, which makes
		it more difficult for an attacker to introduce and execute code.
      </term>
      <term abbr='DES' full="Data Encryption Standard"/>
      <term full="Developer">
		An entity that writes OS software. For the purposes of this document,
		vendors and developers are the same.
      </term>
      <term full="General Purpose Operating System">
		A class of OSes designed to support a wide-variety of workloads consisting of many concurrent applications or services.
		Typical characteristics for OSes in this class include support for third-party applications,
		support for multiple users, and security separation between users and their respective resources.
		General Purpose Operating Systems also lack the real-time constraint that defines Real Time Operating Systems (RTOS).
		RTOSes typically power routers, switches, and embedded devices.
      </term>
      <term abbr='DHE' full="Diffie-Hellman Ephemeral"/>
      <term abbr='DNS' full="Domain Name System"/>
      <term abbr='DRBG' full="Deterministic Random Bit Generator"/>
      <term abbr='DSS' full="Digital Signature Standard"/>
      <term abbr='DT' full="Date/Time Vector"/>
      <term abbr='DTLS' full="Datagram Transport Layer Security"/>
      <term abbr='EAP' full="Extensible Authentication Protocol"/>
      <term abbr='ECDHE' full="Elliptic Curve Diffie-Hellman Ephemeral"/>
      <term abbr='ECDSA' full="Elliptic Curve Digital Signature Algorithm"/>
      <term abbr='EST' full="Enrollment over Secure Transport"/>
      <term abbr='FIPS' full="Federal Information Processing Standards"/>
      <term abbr='HMAC' full="Hash-based Message Authentication Code"/>
      <term full="Host-based Firewall">
		A software-based firewall implementation running on the OS for filtering inbound and
		outbound network traffic to and from processes running on the OS.
      </term>
      <term abbr='HTTP' full="Hypertext Transfer Protocol"/>
      <term abbr='HTTPS' full="Hypertext Transfer Protocol Secure"/>
      <term abbr='DSS' full="Digital Signature Standard"/>
      <term abbr='IETF' full="Internet Engineering Task Force"/>
      <term abbr='IP' full="Internet Protocol"/>
      <term abbr='ISO' full="International Organization for Standardization"/>
      <term abbr='IT' full="Information Technology"/>
      <term abbr='ITSEF' full="Information Technology Security Evaluation Facility"/>
      <term abbr='NIAP' full="National Information Assurance Partnership"/>
      <term abbr='NIST' full="National Institute of Standards and Technology"/>
      <term abbr='OCSP' full="Online Certificate Status Protocol"/>
      <term abbr='OID' full="Object Identifier"/>
      <term abbr='OMB' full="Office of Management and Budget"/>
      <term full="Operating System" abbr="OS" plural="OSes">
		Software that manages physical and logical resources and provides services
		for applications. The terms <h:i>TOE</h:i> and <h:i>OS</h:i> are interchangeable in this
		document. 
      </term>
      <term abbr='PKI' full="Public Key Infrastructure"/>
      <term abbr='PP' full="Protection Profile"/>
      <term abbr='RBG' full="Random Bit Generator"/>
      <term abbr='RFC' full="Request for Comment"/>
      <term abbr='RNG' full="Random Number Generator"/>
      <term abbr='RNGVS' full="Random Number Generator Validation System"/>
      <term full="Personally Identifiable Information" abbr="PII">
		Any information about an individual maintained by an agency, including, but
		not limited to, education, financial transactions, medical history, and criminal or
		employment history and information which can be used to distinguish or trace an
		individual's identity, such as their name, social security number, date and place of
		birth, mother's maiden name, biometric records, etc., including any other personal
		information which is linked or linkable to an individual.<xref to="bibOMB"/>
      </term>
      <term abbr='SAN' full="Subject Alternative Name"/>
      <term abbr='SHA' full="Secure Hash Algorithm"/>
      <term abbr='S/MIME' full="Secure/Multi-purpose Internet Mail Extensions"/>
      <term full="Sensitive Data">
		Sensitive data may include all user or enterprise data or may be specific
		application data such as PII, emails, messaging, documents, calendar items, and contacts.
		Sensitive data must minimally include credentials and keys. Sensitive data shall
		be identified in the OS's TSS by the ST author. 
      </term>
      <term abbr='SIP' full="Session Initiation Protocol"/>
      <term abbr='SWID' full="Software Identification"/>
      <term abbr='TLS' full="Transport Layer Security"/>
      <term abbr='URI' full="Uniform Resource Identifier"/>
      <term abbr='URL' full="Uniform Resource Locator"/>
      <term abbr='USB' full="Universal Serial Bus"/>
      <term full="User">
		A user is subject to configuration policies applied
		to the operating system by administrators.  On some systems under certain
		configurations, a normal user can temporarily elevate privileges to that of an administrator.
		At that time, such a user should be considered an administrator.
      </term>
	  <term abbr="VM" full="Virtual Machine">Blah Blah Blah</term>
      <term abbr='XCCDF' full="eXtensible Configuration Checklist Description Format"/>
      <term abbr='XOR' full="Exclusive Or"/>
    </tech-terms>    

	<!-- Other sections can be added here. -->
	<!-- Commen examples include Scope of Document, Intended Audiance, Compliant Targets of Evaluation,
	     TOE Boundary, TOE Operational Environment, and Roles. These sections can also be included in the
		 TOE/PP Overview aove. -->
    <section title="Compliant Targets of Evaluation" id="sec-TOEdescription">
      <section title="TOE Boundary" id="TOEboundary">
        <figure entity="images/Toe.png" title="General TOE " id="toe"/>
      </section>
      <section title="TOE Platform" id="sec-TOEplatform">
      </section>
    </section>  <!-- Compliant TOEs -->

	<!-- Use Cases (optional) -->
    <section title="Use Cases" id="sec-usecases">
      <usecases>
		<!-- Each use case followed by an optional set of selections or restrictions --> 
		<usecase title="Elephant-own device" id="elephant">
			<description>This is everything we need to describe in words about this use case.</description>	
			<!-- The restrictions and selections associated with this use case -->
			<config>
                <ref-id>soup</ref-id>
				<not><ref-id>ratatouille</ref-id><ref-id>pizza</ref-id></not>
                <not><ref-id>table2</ref-id></not> <!-- This says you can't choose this selectable-->
                <ref-id>optional-comp-example</ref-id> <!-- Inclusion of an optional/objective requirement -->
                <not><ref-id>t-network-eavesdrop</ref-id></not>
                <restrict><ref-id>a-widgets</ref-id>Number <int gte="4" lte="6"/></restrict>
			</config>
		</usecase>
      </usecases>
    </section>  <!-- Use Cases -->

    <!-- Platform definitions (optional) -->
	<!-- Currently only the App PP uses this. And that's probably the only one that will. -->
	<section title="Platforms with Specific EAs" id="sec-platforms">
		<choice prefix="Platforms:" >
			This PP includes platform-specific EAs for the below-listed operating system platforms. For "bare-metal" applications, 
			applications that run on other OS platforms, and applications that run in software-based execution environments contact the
			Technical Community for guidance.<h:p/>
		  <selectables linebreak="yes">
			<selectable id="android"><h:b><snip>Android</snip></h:b>: <h:i>Mobile operating systems based on Google Android.</h:i></selectable>
			<selectable id="windows"><h:b><snip>Microsoft Windows</snip></h:b>: <h:i>Microsoft Windows operating systems.</h:i></selectable>
			<selectable id="ios"><h:b><snip>Apple iOS</snip></h:b>: <h:i>Apple's mobile operating system for iPhones.</h:i></selectable>
			<selectable id="linux"><h:b><snip>Linux</snip></h:b>: <h:i>Linux-based operating systems other than Android.</h:i></selectable>
			<selectable id="Solaris"><h:b><snip>Oracle Solaris</snip></h:b>: <h:i>Oracle's enterprise operating system.</h:i></selectable>
			<selectable id="mac"><h:b><snip>Apple macOS</snip></h:b>: <h:i>Apple's operating system for MACs.</h:i></selectable>
		  </selectables> 
		</choice>
	</section>   <!-- Platforms -->
	

	<!-- Product Features. Required if there are implementation-dependent requirements. -->
	<!-- These are the product features that are defined in order to support implementation-dependent requirements. -->
	<section title="Product Features Mapped to Implementation-dependent Requirements" id="sec-features">
		The feature(s) enumerated below, if implemented by the TOE, require that additional SFRs be claimed in the ST.<h:br/>
		<implements>
			<feature id="feat-test1" title="Test Feature 1">
				<description>Description of test feature one.</description>
			</feature>
			<feature id="feat-test2" title="Test Feature 2">
				<description>Description of test feature two.</description>
			</feature>
		</implements>			
	</section>   <!-- Features -->
	
	<!-- Other sections can be added here. -->
<!--
    <section title="Yet Another Section" id="sec-yetanother">
    </section>
-->	
  </section>   <!-- Introduction  -->


  <!-- Conformance Claims Section -->
  <!-- New conformance claims section for CC:2022. -->
  <!-- If boilerplate is "yes" something that is probably incorrect is generated -->
  <section title="Conformance Claims" id="sec-cclaims" boilerplate="no">

	<!-- cc-version: cc-2022r1 or cc-31r5   -->
	<!-- cc-approach: standard or direct-rationale  -->
	<!-- display: Should this info be displayed in the Conformance -->
	<!-- Claims section? If no, you have to write a free-form section -->
	<CClaimsInfo 
		cc-version="cc-2022r1"         
		cc-approach="direct-rationale"         
		display="yes">                 

		<!-- Conformance for STs: exact, strict, or demonstrable -->
		<cc-st-conf>exact</cc-st-conf>                  

		<!-- Part 2 & 3 conformance (extended or conformant) -->
		<cc-pt2-conf>extended</cc-pt2-conf>           
		<cc-pt3-conf>extended</cc-pt3-conf>           

		<!-- Claims conformance to these other PPs (none)-->
		<cc-pp-conf/>              		  
		
		<!-- Can be in a configuration with these PPs and Modules -->
		<cc-pp-config-with>             
	        <PP-cc-ref/>
			<Mod-cc-ref/>
			
		</cc-pp-config-with>

		<!-- Package claims -->
		<cc-pkg-claim>
			<FP-cc-ref conf="conformant">Functional Package for TLS Version 1.1</FP-cc-ref>
			<FP-cc-ref conf="conformant">Functional Package for TLS Version 2.0</FP-cc-ref>
			<FP-cc-ref conf="conformant">Functional Package for SSH Version 1.0</FP-cc-ref>
			<AP-cc-ref conf="conformant">Assurance Package that Doesn't exist</AP-cc-ref>
		</cc-pkg-claim>

		<!-- Evaluation Methods (optional) -->
		<cc-eval-methods>
			<EM-cc-ref>Name of document</EM-cc-ref>
		</cc-eval-methods>
		
		<!-- Additional information to be added to the end of the Conformance Claims section (optional) -->
		<cc-claims-addnl-info>
			All security requirements in these claimed functional packages are intended to satisfy 
			the O.PROTECTED_COMMS TOE security objective of this PP.
		</cc-claims-addnl-info>

	</CClaimsInfo>
  </section>  <!-- Conformance Claims -->
  

  
  <section title="Security Problem Definition" id="sec-spd">
  
    <!-- Arbitrary introductory text -->
	The security problem is described in terms of the threats that the OS is expected to address, 
	assumptions about the operational environment, and any organizational security policies that the OS
    is expected to enforce.


    <sec:Threats>
		<threats>
			<threat id="t-physical" name="T.PHYSICAL">
				<description>An attacker with physical access might be able to compromise TOE integrity, subvert
					TOE protections, or access tenant data through hardware attacks such as probing, physical
					manipulation, fault-injection, side-channel analysis, environmental stress, or activating
					disabled features or pre-delivery services. This threat is mitigated by TOE functionality for 
					the use cases listed below; for other use cases, the expectation is that the environmental 
					security objectives are sufficient mitigation for this threat.   
					<h:ul>
						<h:li>Server-Class Platform, Enhanced</h:li>
						<h:li>Portable Clients (laptops, tablets), Enhanced</h:li>
						<h:li>CSfC EUD</h:li>
						<h:li>Tactical EUD</h:li>
						<h:li>IoT Devices</h:li></h:ul>
				</description>
				
				<addressed-by>FPT_JTA_EXT.1</addressed-by><rationale>Mitigates threat by restricting access to debug ports to authorized Administrators or physical presence.</rationale>
				<addressed-by>FPT_ROT_EXT.3 (objective)</addressed-by><rationale>Mitigates threat by ensuring integrity of physical components and responding to integrity failures.</rationale>
				<addressed-by>FPT_JTA_EXT.2 (sel-based)</addressed-by><rationale>Mitigates threat by enforcing access control to debug ports.</rationale>
				<addressed-by>FPT_PHP.1 (sel-based/objective)</addressed-by><rationale>Mitigates threat by passively detecting physical tampering.</rationale>
				<addressed-by>FPT_PHP.2 (sel-based/objective)</addressed-by><rationale>Mitigates threat by providing methods to detect and report physical tampering.</rationale>
				<addressed-by>FPT_PHP.3 (sel-based)</addressed-by><rationale>Mitigates threat by resisting physical tampering.</rationale>
				
			</threat>
			<threat name="T.SIDE_CHANNEL_LEAKAGE">
				<description>An attacker running in a tenant context might be able to leverage physical
					effects caused by the operation of the TOE to derive sensitive information about
					other tenants or the TOE.</description>
				<addressed-by>FPT_TUD_EXT.1</addressed-by><rationale>Mitigates threat by providing a means to eliminate side-channel flaws through updates.</rationale>
				
			</threat>
			<threat name="T.PERSISTENCE">
				<description>An attacker might be able to establish a permanent presence on the TOE in
					firmware. This could result in permanent compromise of tenant information, as
					well as TOE updates. This threat does not encompass attacker presence in tenant
					software, as tenant software is not part of the TOE. </description>
				
				<addressed-by>FPT_ROT_EXT.1</addressed-by><rationale>Mitigates threat by providing platform integrity to prevent intrusion of a persistent presence on the platform.</rationale>
				<addressed-by>FPT_RVR_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat with firmware recovery mechanism in case of failure.</rationale>
				<addressed-by>FCS_STG_EXT.2 (sel-based)</addressed-by><rationale>Mitigates threat by enforcing access control on key data to prevent its unauthorized disclosure.</rationale>
				
			</threat>
			<threat name="T.UPDATE_COMPROMISE">
				<description>An attacker may attempt to provide a compromised update of TOE firmware. 
					Such updates can undermine the security functionality of the device if they are
					unauthorized, unauthenticated, or are improperly validated using non-secure or
					weak cryptography.</description>
				
				<addressed-by>FPT_PPF_EXT.1</addressed-by><rationale>Mitigates threat by using the official update process to be the only method to modify platform firmware.</rationale>
				<addressed-by>FPT_ROT_EXT.2</addressed-by><rationale>Mitigates threat by providing a means to attest the validity of updates.</rationale>
				<addressed-by>FCS_COP.1/Hash (sel-based)</addressed-by><rationale>Mitigates threat by providing a means to validate the integrity of an update using a hash.</rationale>
				<addressed-by>FCS_COP.1/SigVer (sel-based)</addressed-by><rationale>Mitigates threat by providing a means to validate the integrity of an update using a hash.</rationale>
				<addressed-by>FPT_TUD_EXT.2 (sel-based)</addressed-by><rationale>Mitigates threat by using a digital signature mechanism to verify the integrity of updates and a rollback protection mechanism to prevent application of an unauthorized update.</rationale>
				<addressed-by>FPT_TUD_EXT.3 (sel-based)</addressed-by><rationale>Mitigates threat by using the TOE's root of trust to validate the authenticity and integrity of an update when it is applied.</rationale>
				<addressed-by>FPT_TUD_EXT.4 (sel-based)</addressed-by><rationale>Mitigates threat through an update mechanism that requires physical access to the TOE to use.</rationale>
				
			</threat>
			<threat name="T.SECURITY_FUNCTIONALITY_FAILURE">
				<description>An attacker could leverage failed or compromised security functionality to 
					access, change, or modify tenant data, TOE data, or other security functionality
					of the device.</description>
				
				<addressed-by>FCS_STG_EXT.1 (optional)</addressed-by><rationale>Mitigates threat by generating keys/secrets and storing them in a secure manner, as well as destroying them on request.</rationale>
				<addressed-by>FCS_CKM.6 (sel-based)</addressed-by><rationale>Mitigates threat by using appropriate key destruction methods to protect the confidentiality of credential data.</rationale>
				<addressed-by>FCS_COP.1/SigGen (sel-based)</addressed-by><rationale>Mitigates threat by generating digital signatures with strong encryption.</rationale>
				<addressed-by>FCS_COP.1/SKC (sel-based)</addressed-by><rationale>Mitigates threat by establishing strong symmetric-key cryptography.</rationale>
				<addressed-by>FPT_FLS.1 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring a DRBG self-test failure causes the TOE to enter an error state where it cannot perform secure functions using that DRBG.</rationale>
				<addressed-by>FDP_ITC_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by importing keys and credentials in a secure fashion.</rationale>
				<addressed-by>FCS_RBG.1 (sel-based)</addressed-by><rationale>Mitigates threat by performing random-bit generation with sufficient complexity.</rationale>
				<addressed-by>FCS_RBG.2 (sel-based)</addressed-by><rationale>Mitigates threat by using an external seed source to ensure sufficiently strong random-bit generation.</rationale>
				<addressed-by>FCS_RBG.3 (sel-based)</addressed-by><rationale>Mitigates threat by using an internal seed source to ensure sufficiently strong random-bit generation.</rationale>
				<addressed-by>FCS_RBG.4 (sel-based)</addressed-by><rationale>Mitigates threat by using multiple internal seed sources to ensure sufficiently strong random-bit generation.</rationale>
				<addressed-by>FCS_RBG.5 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that each noise source's random data is combined to ensure strong entropy when multiple sources are used.</rationale>
				<addressed-by>FPT_TST.1 (sel-based)</addressed-by><rationale>Mitigates threat by using self-tests to ensure correct operation of the DRBG.</rationale>
				
			</threat>
			<threat name="T.TENANT_BASED_ATTACK">
				<description>An attacker running software as a tenant can attempt to access or modify
					TOE firmware or functionality. Note that direct tenant attacks against other
					tenants are not encompassed by this threat as they are out of scope.</description>
				
				<addressed-by>FPT_STM.1</addressed-by><rationale>Mitigates threat by ensuring that audit data indicating a potential attack is accurately timestamped.</rationale>
				<addressed-by>FCS_RBG.6 (optional)</addressed-by><rationale>Mitigates threat by providing a well-defined interface by which tenant software can access the TSF to obtain random data.</rationale>
				<addressed-by>FCS_SLT_EXT.1 (optional)</addressed-by><rationale>Mitigates threat by using salts to increase the effectiveness of cryptographic functions used to protect against attack.</rationale>
				<addressed-by>FDP_TEE_EXT.1 (optional)</addressed-by><rationale>Mitigates threat by establishing a trusted execution environment for tenant software to use.</rationale>
				<addressed-by>FCS_CKM.1/AKG (sel-based)</addressed-by><rationale>Mitigates threat by generating strong cryptographic asymmetric keys to protect stored data.</rationale>
				<addressed-by>FCS_CKM.1/SKG (sel-based)</addressed-by><rationale>Mitigates threat by generating strong cryptographic symmetric keys to protect stored data.</rationale>
				<addressed-by>FCS_CKM.6 (sel-based)</addressed-by><rationale>Mitigates threat by implementing key destruction to prevent the disclosure of keys used to protect stored data.</rationale>
				<addressed-by>FCS_CKM_EXT.5 (sel-based)</addressed-by><rationale>Mitigates threat by utilizing strong algorithms to derive keys that protect stored data.</rationale>
				<addressed-by>FCS_COP.1/Hash (sel-based)</addressed-by><rationale>Mitigates threat by implementing hash functions used for trusted communications.</rationale>
				<addressed-by>FCS_COP.1/KeyedHash (sel-based)</addressed-by><rationale>Mitigates threat by implementing MAC functions used for trusted communications.</rationale>
				<addressed-by>FCS_COP.1/SigGen (sel-based)</addressed-by><rationale>Mitigates threat by implementing signature generation functions used for protected storage.</rationale>
				<addressed-by>FCS_COP.1/SigVer (sel-based)</addressed-by><rationale>Mitigates threat by implementing signature verification functions used for protected storage.</rationale>
				<addressed-by>FCS_COP.1/SKC (sel-based)</addressed-by><rationale>Mitigates threat by implementing symmetric encryption functions used for protected storage.</rationale>
				<addressed-by>FAU_GEN.1 (sel-based)</addressed-by><rationale>Mitigates threat by generating audit records that could provide evidence of attack or misuse.</rationale>
				<addressed-by>FAU_SAR.1 (sel-based)</addressed-by><rationale>Mitigates threat by recording audit data in a manner that could be interpreted to discover evidence of attack.</rationale>
				<addressed-by>FAU_STG.1 (sel-based)</addressed-by><rationale>Mitigates threat by using an external server to preserve audit data that may provide evidence of an attack.</rationale>
				<addressed-by>FAU_STG.2 (sel-based)</addressed-by><rationale>Mitigates threat by preventing audit records indicating a potential attack from being destroyed.</rationale>
				<addressed-by>FAU_STG.5 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that exhaustion of audit storage does not prevent audit data indicating a potential attack from being generated.</rationale>
				<addressed-by>FCS_STG_EXT.2 (sel-based)</addressed-by><rationale>Mitigates threat by using cryptography to protect the confidentiality of key data from outside access.</rationale>
				<addressed-by>FCS_STG_EXT.3 (sel-based)</addressed-by><rationale>Mitigates threat by using cryptography to protect the integrity of key data from outside modification.</rationale>
				
			</threat>
			<threat name="T.NETWORK_BASED_ATTACK">
				<description>An attacker from off the TOE can attempt to compromise the TOE
					through a network interface connected to an active TOE component, such
					as a management subsystem.</description>
				
				<addressed-by>FPT_STM.1</addressed-by><rationale>Mitigates threat by ensuring that audit data indicating a potential attack is accurately timestamped.</rationale>
				<addressed-by>FCS_SLT_EXT.1 (optional)</addressed-by><rationale>Mitigates threat by using salts to increase the effectiveness of cryptographic functions used to protect against attack.</rationale>
				<addressed-by>FCS_CKM.1/AKG (sel-based)</addressed-by><rationale>Mitigates threat by generating strong cryptographic asymmetric keys to protect data in transit.</rationale>
				<addressed-by>FCS_CKM.1/SKG (sel-based)</addressed-by><rationale>Mitigates threat by generating strong cryptographic symmetric keys to protect data in transit.</rationale>
				<addressed-by>FCS_CKM.2 (sel-based)</addressed-by><rationale>Mitigates threat by implementing key establishment to negotiate trusted channels to protect data in transit.</rationale>
				<addressed-by>FCS_CKM.6 (sel-based)</addressed-by><rationale>Mitigates threat by implementing key destruction to prevent the compromise of trusted channels.</rationale>
				<addressed-by>FCS_COP.1/Hash (sel-based)</addressed-by><rationale>Mitigates threat by implementing hash functions used for trusted communications.</rationale>
				<addressed-by>FCS_COP.1/KAT (sel-based)</addressed-by><rationale>Mitigates threat by implementing key agreement and transport functions used for trusted communications.</rationale>
				<addressed-by>FCS_COP.1/KeyedHash (sel-based)</addressed-by><rationale>Mitigates threat by implementing MAC functions used for trusted communications.</rationale>
				<addressed-by>FCS_COP.1/SigGen (sel-based)</addressed-by><rationale>Mitigates threat by implementing signature generation functions used for trusted communications.</rationale>
				<addressed-by>FCS_COP.1/SigVer (sel-based)</addressed-by><rationale>Mitigates threat by implementing signature verification functions used for trusted communications.</rationale>
				<addressed-by>FCS_COP.1/SKC (sel-based)</addressed-by><rationale>Mitigates threat by implementing symmetric encryption functions used for trusted communications.</rationale>
				<addressed-by>FAU_GEN.1 (sel-based)</addressed-by><rationale>Mitigates threat by generating audit records that could provide evidence of attack or misuse.</rationale>
				<addressed-by>FCS_HTTPS_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by implementing HTTPS as a means to protect data in transit.</rationale>
				<addressed-by>FCS_IPSEC_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by implementing IPsec as a means to protect data in transit.</rationale>
				<addressed-by>FTP_ITC_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that sensitive data in transit uses trusted protocols.</rationale>
				<addressed-by>FTP_ITE_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that sensitive data transmitted over untrusted channels is encrypted prior to transit.</rationale>
				<addressed-by>FTP_ITP_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by using a physically protected channel to protect data in transit.</rationale>
				<addressed-by>FAU_SAR.1 (sel-based)</addressed-by><rationale>Mitigates threat by recording audit data in a manner that could be interpreted to discover evidence of attack.</rationale>
				<addressed-by>FAU_STG.1 (sel-based)</addressed-by><rationale>Mitigates threat by using an external server to preserve audit data that may provide evidence of an attack.</rationale>
				<addressed-by>FAU_STG.2 (sel-based)</addressed-by><rationale>Mitigates threat by preventing audit records indicating a potential attack from being destroyed.</rationale>
				<addressed-by>FAU_STG.5 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that exhaustion of audit storage does not prevent audit data indicating a potential attack from being generated.</rationale>
				<addressed-by>FTP_TRP.1 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that remote administration only uses trusted channels.</rationale>
				
				
				
			</threat>
			<threat name="T.UNAUTHORIZED_RECONFIGURATION">
				<description>An attacker might be able to modify the configuration of the TOE and alter its 
					functionality. This might include, activating dormant subsystems, disabling hardware assists,
					or altering boot-time behaviors.</description>
				
				<addressed-by>FMT_CFG_EXT.1</addressed-by><rationale>Mitigates threat by preventing knowledge of a default credential from being used to access the TSF without authorization.</rationale>
				<addressed-by>FMT_MOF.1</addressed-by><rationale>Mitigates threat by permitting management functions to be used only by authorized users.</rationale>
				<addressed-by>FMT_SMF.1</addressed-by><rationale>Mitigates threat by specifying the management functions implemented by the TSF.</rationale>
				<addressed-by>FMT_SMR.1</addressed-by><rationale>Mitigates threat by defining the management roles which can be used to grant access to management functions.</rationale>
				<addressed-by>FIA_UIA_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by preventing the TSF from being modified by an unauthenticated subject.</rationale>
				
				
			</threat>
			<threat name="T.UNAUTHORIZED_PLATFORM_ADMINISTRATOR">
				<description>An attacker might be able to attain platform administrator status by defeating or bypassing
					authentication measures.</description>
				
				<addressed-by>FPT_STM.1</addressed-by><rationale>Mitigates threat by ensuring that time-based authentication throttling or lockout is accurately enforced.</rationale>
				
				<addressed-by>FIA_TRT_EXT.1 (optional)</addressed-by><rationale>Mitigates threat by throttling authentication to prevent access via brute force.</rationale>
				<addressed-by>FIA_AFL_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by limiting further authentication attempts once a failure threshold of a critical authentication mechanism has been reached.</rationale>
				<addressed-by>FIA_PMG_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by enforcing password complexity requirements to prevent credentials from being easily guessed.</rationale>
				<addressed-by>FIA_UAU.5 (sel-based)</addressed-by><rationale>Mitigates threat by implementing multiple authentication mechanisms for accessing the TSF.</rationale>
				<addressed-by>FIA_UAU.7 (sel-based)</addressed-by><rationale>Mitigates threat by preventing disclosure of authentication data during authentication attempts.</rationale>
			</threat>
			
		</threats>
    </sec:Threats>
	
	<!-- Assumptions refer to operational objective objectives regardless of whether -->
	<!-- the document uses standard or direct rationale. -->
	
    <section title="Assumptions" id="sec-assumptions">
      <assumptions>
        <assumption name="A.PLATFORM">
          <description> The OS relies upon a trustworthy computing platform for
            its execution. This underlying platform is out of scope of this PP. </description>
          <objective-refer ref="OE.PLATFORM">
            <rationale> The operational environment objective OE.PLATFORM is realized through
              A.PLATFORM. </rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.PROPER_USER">
          <description> The user of the OS is not willfully negligent or hostile, and uses the
            software in compliance with the applied enterprise security policy. At the same time,
            malicious software could act <h:i>as</h:i> the user, so requirements which
            confine malicious subjects are still in scope.</description>
          <objective-refer ref="OE.PROPER_USER">
            <rationale>The operational environment objective OE.PROPER_USER is realized through
              A.PROPER_USER.</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </section>   <!-- Assumptions -->
	
	<!-- OSPs refer to Objectives or OE Objectives in standard approach documents. -->
	<!-- In direct rationale PPs, they should refer to OE Objectives -->
    <section title="Organizational Security Policies" id="sec-OSPs">
      <OSPs>
        <OSP name="P.ENTERPRISE">
          <description>If the OS is bound to a directory or management server, the configuration of
            the OS software must be capable of adhering to the enterprise security policies
            distributed by them.</description>
          <objective-refer ref="O.MANAGEMENT">
            <rationale>The organizational security policy P.ENTERPRISE is enforced through the
              objective O.MANAGEMENT as this objective represents how the enterprise and user assert
              management over the OS.</rationale>
          </objective-refer>
        </OSP>
      </OSPs>
    </section>   <!-- OSPs -->
	
	<!-- If there are no OSPs, then this: -->
<!--	<section title="Organizational Security Policies" id="sec-osp" boilerplate="no">
        <OSPs/>
    </section> 
-->
	
  </section>  <!-- Security Problem Definition -->
  
  
  <!-- This section is mandatory for standard approach documents.   -->
  <!-- It should be included in direct rationale documents if there are OE Objectives. -->
  <sec:Security_Objectives>
	 
	  
  <!--   4.1 Security Objectives for the Operational Environment -->
  <section title="Security Objectives for the Operational Environment"
	  id="SecurityObjectivesTOEorEnvironment">
	  The following security objectives for the operational environment assist the GPCP in correctly providing its
	  security functionality. These track with the assumptions about the environment. 
	  <SOEs>
		  <SOE name="OE.PHYSICAL_PROTECTION">
			  <description>Platforms that operate within data centers or in other access-controlled environments are 
			  expected to receive a considerable degree of protection from these environments. In addition to physical 
			  protection, these environments often provide malware-detection and behavior-monitoring services
			  for networked computing assets.</description>
		  </SOE>
		  <SOE name="OE.SUPPLY_CHAIN">
			  <description>The manufacturer is expected to implement processes to ensure that TOE hardware and
				  firmware is not compromised between time of TOE manufacture and delivery to its operational site. 
			  </description>
		  </SOE>
		  <SOE name="OE.TRUSTED_ADMIN">
			  <description> The administrator of the GPCP is not careless, willfully
				  negligent or hostile, and administers the platform within compliance of enterprise
				  security policy. </description>
		  </SOE>
	  </SOEs>
  </section>
	
  <!-- 4.3 Security Objectives Rationale -->
  <section title="Security Objectives Rationale" id="SOR">
	<!-- This section is populated by boilerplates.xsl in transforms. -->
  </section>
</sec:Security_Objectives>


  
<sec:Security_Requirements>
	  
	<!--   5.1 Security Functional Requirements -->
    <sec:SFRs title="Security Functional Requirements">
	</sec:SFRs>
</sec:Security_Requirements>

	    
<!-- Appendix A includes optional, objective, and implementation-dependent requirements -->
<!-- Appendix B is selection-based requirements -->
<!-- Appendix C: Extended Component Definitions -->

<!-- Appendix D: Implicity Satisfied Requirements -->
<appendix title="Implicitly Satisfied Requirements" id="satisfiedreqs">
	<!-- Boilerplate goes here -->
	<h:b><ctr ctr-type="Table" pre="Table " id="imp-sat-reqs-table">: Implicitly Satisfied Requirements</ctr></h:b>
    <h:table>	
		<h:tr class="header"><h:td>Requirement</h:td><h:td>Rationale for Satisfaction</h:td></h:tr>
	<h:tr>
	<h:td>FIA_UAU.1 – Timing of Authentication</h:td>
	<h:td>
	  FMT_CFG_EXT.1 has a dependency on FIA_UAU.1 because it cannot exist unless the TOE supports an authentication
		mechanism.
	</h:td>
	</h:tr>
<!--	<h:tr>
	<h:td>FCS_CKM.4 – Cryptographic Key Destruction</h:td>
	<h:td>
	  FCS_CKM.2 has a dependency on FCS_CKM.4. The extended SFR FCS_CKM_EXT.4 addresses this dependency by 
	  defining an alternate requirement for key destruction.
	</h:td>
	</h:tr>
	<h:tr>
	<h:td>FCS_CKM.4 – Cryptographic Key Destruction</h:td>
	<h:td>
	  Each iteration of FCS_COP.1 has a dependency on FCS_CKM.4. The extended SFR FCS_CKM_EXT.4 addresses this 
	  dependency by defining an alternate requirement for key destruction.
	</h:td>
	</h:tr>
	<h:tr>
	<h:td>FIA_UID.1 – Timing of Identification</h:td>
	<h:td>
	  FMT_SMR.2 has a dependency on FIA_UID.1. The extended SFR FIA_UID_EXT.1 expresses this dependency by also requiring
	  user identification for use of the TOE.
	</h:td>
	</h:tr>
	<h:tr>
	<h:td>FPT_STM.1 – Reliable Time Stamps</h:td>
	<h:td>
	  FAU_GEN.1 has a dependency on FPT_STM.1. While not explicitly stated in the PP, it is assumed
	  that this will be provided by the underlying hardware platform on which the TOE is installed. 
	  This is because the TOE is installed as a software or firmware product that runs on general-purpose 
	  computing hardware so a hardware clock is assumed to be available.
	</h:td>
	</h:tr>
	<h:tr>
	<h:td>FPT_STM.1 – Reliable Time Stamps</h:td>
	<h:td>
 	  FIA_X509_EXT.1 has a dependency on FPT_STM.1. While not explicitly stated in the PP, it is assumed that
	  this will be provided by the underlying hardware platform on which the TOE is installed. This is 
	  because the TOE is installed as a software or firmware product that runs on general-purpose computing
	  hardware so a hardware clock is assumed to be available.
	</h:td>
	</h:tr>  -->
    </h:table>
  </appendix>
	
	
<!-- Appendix E: Entropy Documentation and Assessment -->
<appendix id="appendix-entropy" title="Entropy Documentation and Assessment">
    <section id="s-design" title="Design Description">
        Documentation shall include the design of the entropy source as a whole, including the interaction of all entropy source
		components. It will describe the operation of the entropy source to include how it works, how entropy is produced, and
		how unprocessed (raw) data can be obtained from within the entropy source for testing purposes. The documentation 
		should walk through the entropy source design indicating where the random comes from, where it is passed next, any
		post-processing of the raw outputs (hash, XOR, etc.), if/where it is stored, and finally, how it is output from the
		entropy source. Any conditions placed on the process (e.g., blocking) should also be described in the entropy source 
		design. Diagrams and examples are encouraged.<h:p/>
        This design must also include a description of the content of the security boundary of the entropy source and a 
		description of how the security boundary ensures that an adversary outside the boundary cannot affect the entropy
		rate.
    </section>
    <section id="s-justification" title="Entropy Justification">
        There should be a technical argument for where the unpredictability in the source comes from and why there is confidence 
		in the entropy source exhibiting probabilistic behavior (an explanation of the probability distribution and
		justification for that distribution given the particular source is one way to describe this). This argument will
		include a description of the expected entropy rate and explain how to ensure that sufficient entropy is going into 
		the TOE randomizer seeding process. This discussion will be part of a justification for why the entropy source can be
		relied upon to produce bits with entropy.
    </section>
    <section id="s-oc" title="Operating Conditions">
        Documentation will also include the range of operating conditions under which the entropy source is expected to generate 
		random data. It will clearly describe the measures that have been taken in the system design to ensure the entropy
		source continues to operate under those conditions. Similarly, documentation shall describe the conditions under which
		the entropy source is known to malfunction or become inconsistent. Methods used to detect failure or degradation of
		the source shall be included.
    </section>
    <section id="s-health" title="Health Testing">
        More specifically, all entropy source health tests and their rationale will be documented. This will include a description
		of the health tests, the rate and conditions under which each health test is performed (e.g., at startup,
		continuously, or on-demand), the expected results for each health test, and rationale indicating why each test is
		believed to be appropriate for detecting one or more failures in the entropy source.
    </section>
</appendix>
	  
<!-- Appendix F: Equivalency Guidelines -->
<appendix id="appendix-equiv" title="Equivalency Guidelines">
	
	<section id="s-vm-intro" title="Introduction">
		The purpose of equivalence in PP-based evaluations is to find a balance between evaluation rigor and commercial
		practicability--to ensure that evaluations meet customer expectations while recognizing that there is little 
		to be gained from requiring that every variation in a product or platform be fully tested. Generally, if a product is 
		found to be compliant with a PP on a particular platform, then all equivalent products on equivalent platforms are also
		considered to be compliant with the PP. In this case, since the GPCP is itself a platform, only equivalent 
		GPCP products are considered in the analysis.<h:p/>
		A vendor can make a claim of equivalence if the vendor believes that a particular instance of their product implements
		PP-specified security functionality in a way equivalent to the implementation of the same functionality on another 
		instance of their product on which the functionality was tested. The product instances can differ in version number 
		or feature level (model). Equivalence can be used to reduce the testing required across claimed evaluated configurations.
		It can also be used during Assurance Maintenance to reduce testing needed to add more evaluated configurations to a
		certification.<h:p/>
		These equivalency guidelines do not replace Assurance Maintenance requirements or NIAP Policy #5 requirements for CAVP
		certificates. Nor may equivalence be used to leverage evaluations with expired certifications.<h:p/>
		This appendix provides guidance for determining whether products are equivalent for purposes of evaluation against 
		the GPCPPP. This guidance differs from that provided in other
		PPs in that a GPCP is itself a platform, and thus the distinction between product and platform is somewhat blurred.
		This equivalency analysis is adjusted to reflect this.<h:p/>
		For a GPCP, equivalence has two aspects:<h:br />
		<h:ol>
			<h:li><h:b><h:i>Product Equivalence:</h:i></h:b> To be considered equivalent, GPCPs must be produced 
				by the same vendor and support the same tenant software.</h:li>
			<h:li><h:b><h:i>Technical Equivalence:</h:i></h:b> GPCPs may be considered equivalent if there are no 
				differences between them with respect to their implementations of PP-specified security 
				functionality.</h:li>
		</h:ol><h:p/>
		The equivalency determination is made in accordance with these guidelines by the validator and scheme using information
		provided by the evaluator/vendor.
	</section>
	
	<section id="s-approach" title="Approach to Equivalency Analysis">
		There are two scenarios for performing equivalency analysis. One is when a product has been certified and the vendor
		wants to show that a later product should be considered certified due to equivalence with the earlier product. 
		The other is when multiple product variants are going though evaluation together and the vendor would like to reduce
		the amount of testing that must be done. The basic rules for determining equivalence are the same in both cases. But
		there is one additional consideration that applies to equivalence with previously certified products. That is, the
		product with which equivalence is being claimed must have a valid certification in accordance with scheme rules and
		the Assurance Maintenance process must be followed. If a product’s certification has expired, then equivalence cannot
		be claimed with that product.<h:p/>
		When performing equivalency analysis for a GPCP, the evaluator/vendor should first use the factors and guidelines for 
		Product Equivalence to determine the set of products to be further considered.<h:p/>
		Each non-equivalent product for which compliance is claimed must be fully tested.<h:p/>
		<h:b><h:i>“Differences in PP-Specified Security Functionality” Defined</h:i></h:b><h:br />
		PP-specified security functionality implemented by the TOE that differs in actual implementation between versions or product
		models break equivalence for that functionality. Likewise, the TOE invokes PP-specified security functionality
		differently in different versions or models of the TOE, then equivalence is broken for that functionality.
	</section>
	
	<section id="s-modelequiv" title="Specific Guidance for Determining Product Equivalence">
		Product Equivalence attempts to determine whether different feature levels or versions of the same product are equivalent 
		for purposes of PP testing. For example, if a product has a “basic” edition and an “enterprise” edition, is it necessary
		to test both models? Or does testing one model provide sufficient confidence that both models are compliant? <h:p/>
		<h:b><ctr ctr-type="Table" pre="Table " id="equiv-prod-model">: Factors for Determining Product Equivalence</ctr></h:b><h:br/>
		<h:table border="1">
			<h:tr class="header" bgcolor="#cccccc">
				<h:td valign="top">Factor</h:td>
				<h:td valign="top">Same/Different</h:td>
				<h:td valign="top">Guidance</h:td>
			</h:tr>
			<h:tr>
				<h:td valign="top">Product Type</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Products in different product classes are not equivalent. Servers, EUDs, and IoT devices are not equivalent.</h:td>
			</h:tr>
			<h:tr>
				<h:td valign="top">Product Vendors</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Products manufactured by different vendors are not equivalent.</h:td>
			</h:tr>
			<h:tr>
				<h:td rowspan="2" valign="top">PP-Specified Functionality</h:td>
				<h:td valign="top">Same</h:td>
				<h:td valign="top">If differences between products affect only non-PP-specified functionality, then the models are
					equivalent. </h:td>
			</h:tr>
			<h:tr>
			  <h:td valign="top">Different</h:td>
			  <h:td valign="top">If PP-specified security functionality is affected by the differences between products, then
					the products are not equivalent and must be tested separately. It is necessary to test only the functionality
					affected by the differences. If only differences are tested, then the differences must be enumerated,
					and for each difference the Vendor must provide an explanation of why each difference does or does not affect
					PP-specified functionality. If the products are fully tested separately, then there is no need to document the 
					differences.
			  </h:td>
			</h:tr>
		</h:table><h:p/>
	</section>

	<section id="ss-hardware-equiv" title="Technical Equivalence">
		Platform equivalence is based primarily on processor architecture and instruction sets.<h:p/>
		Technical equivalence is based primarily on processor architecture, instruction sets, and firmware versions. It is determined
		on a per-SFR basis.<h:p/>
		Platforms with different processor architectures and instruction sets are not equivalent. Processors with the same
		architecture that have instruction sets that are subsets or supersets of each other are not disqualified from
		being equivalent. If PP-specified security functionality takes the same code paths when executing on different 
		processors of the same family, then the processors can be considered equivalent with respect to that functionality.<h:p/>
		For example, if for some PP-specified security functionality, one code path is followed on platforms that support the
		AES-NI instruction and another on platforms that do not, then those two platforms are not equivalent with respect
		to that functionality. But if the same path is followed whether or not the platform supports AES-NI, then the
		platforms are equivalent with respect to that functionality.<h:p/>
		Platforms that run the same versions of the same firmware are considered equivalent with respect to any PP-specified 
		security functionality implemented by that firmware. If firmware versions are different, then more in-depth analysis 
		is required to determine whether the security functionality is implemented equivalently. <h:p/>
		The platforms are equivalent if they are equivalent with respect to all PP-specified security functionality.<h:p/>
		<h:b><ctr ctr-type="Table" pre="Table " id="equiv-hw-platform">: Factors for Determining Technical Equivalence</ctr></h:b><h:br/>
		<h:table border="1">
			<h:tr class="header" bgcolor="#cccccc">
				<h:td valign="top">Factor</h:td>
				<h:td valign="top">Same/Different/None</h:td>
				<h:td valign="top">Guidance</h:td>
			</h:tr>
			<h:tr>
				<h:td valign="top">Processor Vendors</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Functionality implemented through processors manufactured by different vendors is not equivalent.</h:td>
			</h:tr>
			<h:tr>
				<h:td valign="top">Processor/Chipset Architecture</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Functionality implemented through processors with different processor and chipset architectures are not equivalent.</h:td>
			</h:tr>
			<h:tr>
				<h:td valign="top">Firmware Versions</h:td>
				<h:td valign="top">Same</h:td>
				<h:td valign="top">Functionality implemented through equivalent processors by the same version of firmware is considered equivalent.</h:td>
			</h:tr>
			<h:tr>
				<h:td valign="top">PP-Specified Functionality</h:td>
				<h:td valign="top">Same</h:td>
				<h:td valign="top">For PP-specified security functionality implemented through equivalent processors and different 
					firmware versions, the platforms are equivalent with respect to the functionality if execution of the
					functionality follows the same code paths on both platforms.</h:td>
			</h:tr>
			<h:tr>
				<h:td valign="top">PP-Specified Functionality</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">For PP-specified security functionality implemented through equivalent processors and different
					firmware versions, the platforms are not equivalent with respect to the functionality if execution of the
					functionality follows different code paths on both platforms.</h:td>
			</h:tr>
		</h:table><h:p/>
	</section>
	    	    
	<section id="s-specificity" title="Level of Specificity for Tested and Claimed Equivalent Configurations">
		In order to make equivalency determinations, the vendor and evaluator must agree on the equivalency claims. They must
		then provide the scheme with sufficient information about the TOE instances and platforms that were evaluated, and the
		TOE instances and platforms that are claimed to be equivalent.<h:p/>
		The ST must describe all configurations evaluated down to processor manufacturer, model number, and microarchitecture version.
	</section>	    
  	    
</appendix>	  <!-- Equiv -->

<!-- Appendix G: Use-Case Templates -->
<!-- Appendix H: Acronyms -->
<!-- Appendix I: Bibliography -->

<bibliography>
<!--	  <cc-entry/>   -->
      <entry id="bibOMB">
        <tag>OMB</tag>
        <description>
          <h:a href="http://www.whitehouse.gov/sites/default/files/omb/memoranda/fy2006/m06-19.pdf"
            >Reporting Incidents Involving Personally Identifiable Information and Incorporating the
            Cost for Security in Agency Information Technology Investments</h:a>, OMB M-06-19, July
          12, 2006. </description>
      </entry>
 </bibliography>

</PP>
