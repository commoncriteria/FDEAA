name: QuickBuild

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: 
  push: 
    branches: master
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-project:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    
    
#      - name: Checkout project and transforms
#        uses: actions/checkout@v2
#        with:
#          submodules: true
#      - name: Install Build Packages
#        run: sudo apt-get update && sudo apt-get install -y xsltproc hunspell
    - name: Get Status
      run: |
         echo '::set-output name=WORD::$(if [ -s output/SanityChecksOutput.md ]; then echo "SUCCESS"; else echo "FAILURE"; fi )'
         echo '::set-output name=COLOR::$(if [ -s output/SanityChecksOutput.md ]; then echo "green"; else echo "red"; fi )'
      id: status
      
    - name: Get color
      run: echo "Status- ${{ steps.status.outputs.COLOR }} and ${{ steps.status.outputs.WORD }}"

    - name: Prepare environment
      id: coverage
      run: |
        # Generates a GitHub Workflow output named `lines` with a coverage value
        echo "##[set-output name=lines;]${COVERAGE}"
        # Output values to be used by other steps
        echo "##[set-output name=path;]${BADGE_PATH}"
        echo "##[set-output name=branch;]${BRANCH}"
      env:
        COVERAGE: 53.5%
        BADGE_PATH: ${{ steps.extract_branch.outputs.branch }}/test-badge.svg
        BRANCH: badges    

    - uses: actions/checkout@v1
      with:
        ref: ${{ steps.coverage.outputs.branch }}

    - name: Upload badge as artifact
      uses: actions/upload-artifact@v2
      with:
        name: badge
        path: ${{ steps.coverage.outputs.path }}
        if-no-files-found: error

    - name: Commit badge
      continue-on-error: true
      env:
        BADGE: ${{ steps.coverage.outputs.path }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add "${BADGE}"
        git commit -m "Add/Update badge"
		
    - name: Push badge commit
      uses: ad-m/github-push-action@master
      if: ${{ success() }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.coverage.outputs.branch }}

#- name: Create badge
#      uses: emibcn/badge-action@v1.2.1
#      with:
#         label: 'Sanity Checks:'
#         status: ${{ steps.status.outputs.WORD }}
#         color: ${{ steps.status.outputs.COLOR }}
#         path: 'test-badge.svg'




